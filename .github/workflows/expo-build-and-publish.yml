name: Build Android Preview

on:
  release:
    types: [published] # Trigger when a release is published


jobs:
  expo-build:
    name: Build Android Preview
    runs-on: ubuntu-latest
    outputs:
      android_build_id: ${{ steps.build.outputs.buildId }}

    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node22-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node22-

      - name: Install dependencies
        run: npm ci

      - name: Build Android Preview
        id: build
        run: |
          BUILD_JSON=$(eas build --platform android --profile internal --non-interactive --json)
          BUILD_ID=$(echo $BUILD_JSON | jq -r '.[0].id')
          echo "Build ID: $BUILD_ID"
          echo "buildId=$BUILD_ID" >> "$GITHUB_OUTPUT"

  play-store-publish:
    needs: expo-build
    name: Publish to Play Store
    runs-on: ubuntu-latest

    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "‚ùå EXPO_TOKEN secret is missing"
            exit 1
          fi
          if [ -z "${{ secrets.ANDROID_PLAY_STORE_SERVICE_ACCOUNT_JSON }}" ]; then
            echo "‚ùå ANDROID_PLAY_STORE_SERVICE_ACCOUNT_JSON secret is missing"
            exit 1
          fi
          echo "‚úÖ All required secrets are present"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node22-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node22-
      
      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: npm ci

      - name: Create credentials directory
        run: mkdir -p ./credentials

      - name: Setup Service Account JSON
        run: |
          echo '${{ secrets.ANDROID_PLAY_STORE_SERVICE_ACCOUNT_JSON }}' > ./credentials/google-play-service-account.json
          echo "‚úÖ Service account JSON file created"
          
      - name: Verify Service Account JSON
        run: |
          if [ ! -f "./credentials/google-play-service-account.json" ]; then
            echo "‚ùå Service account JSON file not found"
            exit 1
          fi
          # V√©rifier que le JSON est valide
          if ! jq empty ./credentials/google-play-service-account.json; then
            echo "‚ùå Invalid JSON in service account file"
            exit 1
          fi
          echo "‚úÖ Service account JSON is valid"

      - name: Publish to Play Store
        run: |
          echo "üì± Submitting build ID: ${{ needs.expo-build.outputs.android_build_id }} to Play Store...";
          eas submit --id ${{ needs.expo-build.outputs.android_build_id }} --platform android --profile internal --non-interactive --verbose 
          echo "‚úÖ Successfully submitted to Play Store"